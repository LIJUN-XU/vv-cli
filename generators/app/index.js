// initializing - ÊÇ®ÁöÑÂàùÂßãÂåñÊñπÊ≥ïÔºàÊ£ÄÊü•ÂΩìÂâçÈ°πÁõÆÁä∂ÊÄÅÔºåËé∑ÂèñÈÖçÁΩÆÁ≠âÔºâ
// prompting- Âú®Âì™ÈáåÊèêÁ§∫Áî®Êà∑ÈÄâÊã©Ôºà‰Ω†ÊâìÁîµËØùÁöÑÂú∞Êñπthis.prompt()Ôºâ
// configuring- ‰øùÂ≠òÈÖçÁΩÆÂπ∂ÈÖçÁΩÆÈ°πÁõÆÔºàÂàõÂª∫.editorconfigÊñá‰ª∂ÂíåÂÖ∂‰ªñÂÖÉÊï∞ÊçÆÊñá‰ª∂Ôºâ
// default - Â¶ÇÊûúÊñπÊ≥ïÂêçÁß∞‰∏é‰ºòÂÖàÁ∫ß‰∏çÂåπÈÖçÔºåÂ∞ÜË¢´Êé®ÈÄÅÂà∞Ê≠§ÁªÑ„ÄÇ
// writing - ÁºñÂÜôÁîüÊàêÂô®ÁâπÂÆöÊñá‰ª∂ÔºàË∑ØÁî±ÔºåÊéßÂà∂Âô®Á≠âÔºâÁöÑ‰ΩçÁΩÆ
// conflicts - Â§ÑÁêÜÂÜ≤Á™ÅÔºàÂÜÖÈÉ®‰ΩøÁî®Ôºâ
// install - ËøêË°åÂÆâË£ÖÔºànpmÔºåbowerÔºâ
// end- Áß∞‰∏∫ÊúÄÂêéÔºåÊ∏ÖÁêÜÔºåÂÜçËßÅÂÜçËßÅÁ≠â
const path = require('path');
const chalk = require('chalk'); //‰∏çÂêåÈ¢úËâ≤ÁöÑinfo
const util = require('util');
const Generator = require('yeoman-generator');
const yosay = require('yosay'); //yeomanÂºπÂá∫Ê°Ü
module.exports = class extends Generator {
	info() {
		this.log(chalk.strikethrough(
			'I am going to build your appüè°'
		));
	}
	constructor(args, opts) {
		super(args, opts);
		this.appname = "vv-cli";
	}
	paths() {
		this.sourceRoot();
	}
	install() { //ÂÆâË£Ö‰æùËµñ
		// this.installDependencies({
		//     skipInstall: this.options['skip-install']
		// });
	}
	prompting() {
		return this.prompt([{
			type: 'input',
			name: 'name',
			message: 'Input Your project name',
			default: this.appname // Default to current folder name
		}, {
			type: 'list',
			name: 'preprocessor',
			message: 'Select the CSS preprocessor',
			choices: ['‚óâ PostCSS', '‚óâ Less', '‚óâ Sass', '‚óâ Stylus']
		}]).then((answers) => {
			this.log('app name', answers.name);
			this.appname = answers.name;
			if (answers.preprocessor) {
				this.log(chalk.yellow(
					'È¢ÑÂ§ÑÁêÜÂ∑≤Ë¢´ÊàëÂº∫ÁÉàÂª∫ËÆÆÊàêPostCSSüíª'
				));
			}
		});
	}
	writing() {
		const _path = this.appname;
		this.fs.copy(
			this.templatePath('assets'),
			this.destinationPath(_path + '/assets')
		);
		this.fs.copy(
			this.templatePath('components'),
			this.destinationPath(_path + '/components')
		);
		this.fs.copy(
			this.templatePath('core'),
			this.destinationPath(_path + '/core')
		);
// 		this.fs.copy(
// 			this.templatePath('static/.gitkeep'),
// 			this.destinationPath(_path + '/static/.gitkeep')
// 		);
		this.fs.copy(
			this.templatePath('pages'),
			this.destinationPath(_path + '/pages')
		);
		this.fs.copy(
			this.templatePath('static'),
			this.destinationPath(_path + '/static')
		);
		this.fs.copy(
			this.templatePath('store'),
			this.destinationPath(_path + '/store')
		);
		this.fs.copyTpl(
			this.templatePath('lavas.config.js'),
			this.destinationPath(_path + '/lavas.config.js')
		);
		this.fs.copyTpl(
			this.templatePath('LICENSE'),
			this.destinationPath(_path + '/LICENSE')
		);
		this.fs.copyTpl(
			this.templatePath('.editorconfig'),
			this.destinationPath(_path + '/.editorconfig')
		);
		this.fs.copyTpl(
			this.templatePath('.fecsignore'),
			this.destinationPath(_path + '/.fecsignore')
		);
		this.fs.copyTpl(
			this.templatePath('.fecsrc'),
			this.destinationPath(_path + '/.fecsrc')
		);
		
// 		this.fs.copyTpl(
// 			this.templatePath('.eslintrc.js'),
// 			this.destinationPath(_path + '/.eslintrc.js')
// 		);
		//         this.fs.copyTpl(
		//             this.templatePath('.gitignore'),
		//             this.destinationPath(_path + '/.gitignore')
		//         );
		this.fs.copyTpl(
			this.templatePath('.postcssrc.js'),
			this.destinationPath(_path + '/.postcssrc.js')
		);
		this.fs.copyTpl(
			this.templatePath('.travis.yml'),
			this.destinationPath(_path + '/.travis.yml')
		);
		this.fs.copyTpl(
			this.templatePath('server.dev.js'),
			this.destinationPath(_path + '/server.dev.js')
		);
		this.fs.copyTpl(
			this.templatePath('server.prod.js'),
			this.destinationPath(_path + '/server.prod.js')
		);
// 		this.fs.copyTpl(
// 			this.templatePath('index.html'),
// 			this.destinationPath(_path + '/index.html')
// 		);
		this.fs.copyTpl(
			this.templatePath('package.json'),
			this.destinationPath(_path + '/package.json'), {
				packagename: this.appname
			}
		);
		this.fs.copyTpl(
			this.templatePath('README.md'),
			this.destinationPath(_path + '/README.md')
		);
	}
	end() {
		this.log(yosay(
			`
 __   __ __   __
 \\ \\ / / \\ \\ / /
  \\ \V /   \\ \V / 
   \\_/     \\_/          
  `
		));
	}
};
